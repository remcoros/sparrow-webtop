name: Build and Publish Docker Image (Multi-Arch)

on:
  workflow_dispatch:
  push:
    paths-ignore: ['*.md']
    branches: [ main ]
    tags: [ "v*.*.*" ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            dockerfile: Dockerfile
          - arch: arm64
            platform: linux/arm64
            dockerfile: Dockerfile.aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Prep: lowercase owner and strip leading "v" from tag names
      - name: Compute image vars
        id: vars
        run: |
          echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
          echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push (main branch) - ${{ matrix.arch }}
        if: github.ref_type == 'branch' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop:main-${{ matrix.arch }}
            ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop:${{ github.sha }}-${{ matrix.arch }}

      - name: Build and push (tag) - ${{ matrix.arch }}
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop:${{ steps.vars.outputs.version }}-${{ matrix.arch }}
            ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop:${{ github.sha }}-${{ matrix.arch }}
            ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop:latest-${{ matrix.arch }}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image vars
        id: vars
        run: |
          echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
          echo "version=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Create and push multi-arch manifest (main)
        if: github.ref_type == 'branch' && github.ref == 'refs/heads/main'
        run: |
          set -euo pipefail
          IMAGE="ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop"
          docker manifest create "$IMAGE:main" \
            --amend "$IMAGE:main-amd64" \
            --amend "$IMAGE:main-arm64"
          docker manifest push "$IMAGE:main"

          docker manifest create "$IMAGE:${{ github.sha }}" \
            --amend "$IMAGE:${{ github.sha }}-amd64" \
            --amend "$IMAGE:${{ github.sha }}-arm64"
          docker manifest push "$IMAGE:${{ github.sha }}"

  # PR handling moved to separate workflow

      - name: Create and push multi-arch manifest (tag)
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        run: |
          set -euo pipefail
          IMAGE="ghcr.io/${{ steps.vars.outputs.owner }}/sparrow-webtop"
          VER="${{ steps.vars.outputs.version }}"
          docker manifest create "$IMAGE:$VER" \
            --amend "$IMAGE:$VER-amd64" \
            --amend "$IMAGE:$VER-arm64"
          docker manifest push "$IMAGE:$VER"

          docker manifest create "$IMAGE:latest" \
            --amend "$IMAGE:latest-amd64" \
            --amend "$IMAGE:latest-arm64"
          docker manifest push "$IMAGE:latest"

          docker manifest create "$IMAGE:${{ github.sha }}" \
            --amend "$IMAGE:${{ github.sha }}-amd64" \
            --amend "$IMAGE:${{ github.sha }}-arm64"
          docker manifest push "$IMAGE:${{ github.sha }}"
